using SchoolAdministration.Utils;
using SchoolAdministration.DTO;
using Aspose.Cells;
using LoadOptions = Aspose.Cells.LoadOptions;
using Newtonsoft.Json;


namespace SchoolAdministration.Services
{


    public class StudentService : IStudentService
    {
        private readonly DataAccess _Execute;

        public StudentService(DataAccess Execute)
        {
            _Execute = Execute;

        }

        string path = "C:\\Users\\rohit\\source\\repos\\WebApplication5\\WebApplication5";

        public async Task<string> GetStudentDetails()
        {
            string query = @"select * from School_Administration.students";
            string tabledata = await _Execute.ExecuteQuery(query);
            return tabledata;
        }

        public void ConvertBase64ToFile(Payload payload)
        {
            string fileBase64 = "";
            byte[] fileAsBytes = Convert.FromBase64String(fileBase64);

            //Convert byte[] into stream
            Stream stream = new MemoryStream(fileAsBytes, 0, fileAsBytes.Length);

            //Specify load options.
            LoadOptions loadOptions = new LoadOptions(LoadFormat.Xlsx);

            //Create workbook from stream
            Aspose.Cells.Workbook workbook = new Aspose.Cells.Workbook(stream, loadOptions);

            workbook.Save(path+"\\Student_Details.xlsx");
        }

        public async Task<List<Student>> ConvertFileToList()
        {
            
            var workbook = new Aspose.Cells.Workbook(path + "\\Student_Details.xlsx");
            workbook.Worksheets.RemoveAt("Evaluation Warning");
            workbook.Worksheets.RemoveAt("Evaluation Warning (1)");
            workbook.Save(path + "\\Output.json");
            string text = File.ReadAllText(path + "\\Output.json");
            
            var Student_List = JsonConvert.DeserializeObject<List<Student>>(text);
            return Student_List;
        
        }
        public async Task<List<string>> InsertExcelStudentData(List<Student> student)
        {
            var students = RemoveDuplicates(student);
            string query = @"INSERT INTO School_Administration.Students (Student_Id, Student_Name, Student_Grade, Student_Address, Student_ZipCode)
            VALUES (@Student_Id, @Student_Name, @Student_Grade, @Student_Address, @Student_ZipCode);";
            List<string> duplicates = await _Execute.ExecuteQueryWithParamsStudents(query,students);
            return (duplicates);
        }

        public List<Student> RemoveDuplicates(List<Student> student)
        {
            return student.DistinctBy(x=>x.Student_Id).ToList();
        }
    
    }
}
